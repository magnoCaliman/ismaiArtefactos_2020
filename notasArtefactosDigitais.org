* AULA 01 - 18/FEV

** Hardware Hacking / Circuit Bending
- Laying of hands
  - https://www.youtube.com/watch?v=-l5EhwsXUGg

- Reed Ghazala, the Father of Circuit Bending
  - https://www.youtube.com/watch?v=KHDL9iGxDPM
- Intro to Circuit Bending
  - https://www.youtube.com/watch?v=kJfTdD_5XyE
- Circuit Bent Trumpet
  - https://www.youtube.com/watch?v=3LtOalTAVGw

** Manufatura de dispositivos
- Microfones indutores
  - https://www.youtube.com/watch?v=4T7qkYY7LZM
- Christina Kubisch - Electrical Walks
  - https://vimeo.com/54846163

- Microfones piezos
  - https://www.youtube.com/watch?v=FOfEsUTZRK0

** Arduino
- https://www.arduino.cc/
- http://www.instructables.com/id/Arduino-Line-Follower-Robot-1/
- http://www.instructables.com/id/Use-an-Accelerometer-and-Gyroscope-with-Arduino/
- http://www.instructables.com/id/coin-slot-detector/
- https://www.youtube.com/watch?v=Z86V_ICUCD4
- https://www.youtube.com/watch?v=Nqk_nWAjBus
- http://www.instructables.com/id/Twitter-Controlled-Pet-Feeder/
- http://www.instructables.com/id/Singing-plant-Make-your-plant-sing-with-Arduino-/
- https://www.youtube.com/watch?v=JCiXV6b7N0A&list=UU4u0V-G5KTeWF5hnubp-lrA&index=9&feature=plcp

** Links extras vistos em sala
- Suicide shower
  - https://duckduckgo.com/?q=suicide+shower&iax=images&ia=images
- Protoboard
  - https://duckduckgo.com/?q=protoboar+populated&iax=images&ia=images
- Chromium
  - https://www.chromium.org/
- Gameduino
  - https://duckduckgo.com/?q=gameduino&t=ffab&iax=images&ia=images
- Arduinos no AliExpress
  - https://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20200218113532&SearchText=arduino
- Raspberry Pie
  - https://www.raspberrypi.org/
  - https://duckduckgo.com/?q=raspberry+pie+computer&t=ffab&iar=images&iax=images&ia=images&iai=https%3A%2F%2Fwww.raspberrypi.org%2Fmagpi%2Fwp-content%2Fuploads%2F2017%2F04%2FRaspberry-Pi-3.jpg

    
* AULA 02 - 03/MAR

Capítulos 11, 12 e 13 em /COLLINS, N - Handmade Electronic Music/

- Circuit Bending
  - https://www.youtube.com/watch?v=TjbGSgCopNk

- Laying of Hands
  - https://www.youtube.com/watch?v=-l5EhwsXUGg

** Links extras vistos em aula
- 10.000 volts wood burning
  - https://www.youtube.com/watch?v=PFMo5aicurc

- Van de Graff Generator
  - https://www.youtube.com/watch?v=3Ptu07enIsY



* AULA 03 - 10/MAR

Capítulo 4 e 5 em /COLLINS, N - Handmade Electronic Music/

- Jumping Speaker
  - https://www.youtube.com/watch?v=6ZxxuDNQuMQ

- Exemplos:
  - https://photos.google.com/photo/AF1QipMR_9pvqfQyWJxEL9dY8DLsAV67I91gj9ThfWFI
  - https://photos.google.com/photo/AF1QipNb_L_dtvkEOY_5CKkPuzCuumpv-AP-VvMnpK3j

** Links extras vistos em sala

- Electron microscope on vynil LP
  - https://www.youtube.com/watch?v=GuCdsyCWmt8

- How speakers make sound
  - https://animagraffs.com/loudspeaker/

- Fun with a 9V batteries. (244 of them)
  - https://www.youtube.com/watch?v=8hwLHdBTQ7s

- Carreta Treme Treme
  - https://www.youtube.com/watch?v=RpT-h5tPYdw
  - https://www.youtube.com/watch?v=h8f8dH7q_sU
  - https://www.youtube.com/watch?v=0fKMOY-Brd8


* AULA 04 - 17/MAR

- Simulador online de Arduino em:
  - https://www.tinkercad.com/

** Links extras vistos em aula
- Fresadora (CNC Router)
  - https://www.google.com/search?tbm=isch&q=cnc%20router&tbs=imgo:1

- Impressora 3D
  - https://www.youtube.com/watch?v=FqQAjkZOBeY

- Geiger Counter feito com Arduino
  - https://www.cooking-hacks.com/documentation/tutorials/geiger-counter-radiation-sensor-board-arduino-raspberry-pi-tutorial

- Detector de mealheiro
  - https://www.instructables.com/id/coin-slot-detector/


* AULA 05 - 24/MAR

- Touchless Hand Sanitizer Dispenser
  - https://www.facebook.com/watch/?v=218900009494708

** Blink

Ex.1 - Blink - https://www.tinkercad.com/things/3jdGRZLhdex 
#+BEGIN_SRC c
void setup()
{
  pinMode(7, OUTPUT);     //configura pino 7 como SAÍDA de tensão
}

void loop()
{
  digitalWrite(7, HIGH);  //LIGA pino (envia tensão elétrica)
  delay(500);             //interrompe momentâneamente o ciclo do void loop()
  digitalWrite(7, LOW);   //DESLIGA pino
  delay(500);             
}
#+END_SRC

** Protoboard

- /Rocha, H - Introdução à Eletrônica Para Artistas - p.31/
  - Ex.2 - Protoboard - https://www.tinkercad.com/things/ktwF407CHEB 
#+BEGIN_SRC c
void setup()
{
  pinMode(7, OUTPUT)
}

void loop()
{
  digitalWrite(7, HIGH);
  delay(500);
  digitalWrite(7, LOW);
  delay(300);
}
#+END_SRC

- /Banzi, M - Make - Getting started with Arduino - p.42/
  - Ex.3 - Ground compartilhado -  https://www.tinkercad.com/things/7jYMC8PHA21 
#+BEGIN_SRC c
void setup()
{
  pinMode(12, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(2, OUTPUT);
}

void loop()
{
  digitalWrite(12, HIGH);
  digitalWrite(4, HIGH);
  digitalWrite(2, HIGH);
}
#+END_SRC

- /Experimento 1: construir um circuito (usando a protoboard) onde um ou mais botões são usados para ligar/desligar componentes que já vimos: leds, motores ou colunas (no tinkercad, "piezos")./
- Possível solução:  https://www.tinkercad.com/things/5b7xva4baRr 
  - Pergunta: nessa solução, há diferença conectar o positivo do motor /antes/ do botão?

** Funções & Argumentos

- Funções vistas até o momento: ~pinMode()~, ~digitalWrite()~ e ~delay()~
- Como descobrir quais os argumentos dessas funções? RTFM: https://www.arduino.cc/reference/en/

*** ~tone()~

 - Documentação: https://www.arduino.cc/reference/en/language/functions/advanced-io/tone/

 - Ex.4 - Tone -  https://www.tinkercad.com/things/goaXcc7SD0w 
 #+BEGIN_SRC c
 void setup()
 {
   pinMode(5, OUTPUT);
 }

 void loop()
 {
   tone(5, 100);
 }
 #+END_SRC

 - Ex.5 - Tone (3 argumentos) -  https://www.tinkercad.com/things/l9MI9pnko2L
 #+BEGIN_SRC c
 void setup()
 {
   pinMode(5, OUTPUT);
 }

 void loop()
 {
   tone(5, 100, 250);
   delay(1000); //agora com três argumentos
 }
 #+END_SRC

 - Ex.6 - Tone (sequenciador) -  https://www.tinkercad.com/things/ism9S9i4ulI
 #+BEGIN_SRC c
 void setup()
 {
   pinMode(5, OUTPUT);
 }

 void loop()
 {
   tone(5, 100, 90);
   delay(150);
   tone(5, 200, 90);
   delay(150);
   tone(5, 300, 90);
   delay(150);
   tone(5, 400, 90);
   delay(150);
 }
 #+END_SRC


** Links extras vistos em aula:
- Exemplo de sequenciador: abertura Stranger Things
  - https://www.youtube.com/watch?v=-RcPZdihrp4


* AULA 06 - 31/MAR

** ~random()~

- Documentação: https://www.arduino.cc/reference/en/language/functions/random-numbers/random/

- Ex.6 - blinkRandom - https://www.tinkercad.com/things/6MLM7S6X0Tb 
#+BEGIN_SRC c
void setup()
{
  pinMode(7, OUTPUT);
}

void loop()
{
  digitalWrite(7, HIGH);
  delay(random(100, 1000));
  digitalWrite(7, LOW);
  delay(500);
}
#+END_SRC

- Ex.7 - toneRandom - https://www.tinkercad.com/things/b02258ngUu4 
#+BEGIN_SRC c
void setup()
{
  pinMode(5, OUTPUT);
}

void loop()
{
  tone(5, random(100, 800));
  delay(200);
}
#+END_SRC

- Pergunta: é randômico de verdade? O que é o "pseudo-random" mencionado na documentação?

** Funções como argumento de outras funções & Modularidade
#+BEGIN_SRC c
void setup()
{
  pinMode(5, OUTPUT);
}

void loop()
{
  digitalWrite(5, HIGH);
  delay(distanciaEntrePessoas()); // isso poderia existir!
  digitalWrite(5, LOW);
  delay(distanciaEntrePessoas());
}

void distanciaEntrePessoas()
{
  // muitas linhas de código!
}
#+END_SRC

- Ou algo como: https://blog.arduino.cc/2020/03/10/this-pair-of-arduino-glasses-stops-you-from-touching-your-face/

** Variáveis

- /Experimento 2: reproduzir o comportamento desse circuito:  https://www.tinkercad.com/things/djHUEO9MFJB/

*** O que é / para que serve?

- Resumão: https://www.arduino.cc/en/Tutorial/Variables

- ~int x = 10~ -> Dissecando as 4 partes do uso de uma variável *no Arduino*n:
  - ~int~ -> tipo de dado (data type)
  - ~x~ -> nome
  - ~=~ -> atribuição de valor
  - ~10~ -> valor

- Ex.8 - Blink com variável -  https://www.tinkercad.com/things/1c6hEqOfAHP 
#+BEGIN_SRC c
int pinoLed = 7;
int tempoDelay = 500;
  
void setup()
{
  pinMode(pinoLed, OUTPUT);     
}

void loop()
{
  digitalWrite(pinoLed, HIGH);  
  delay(tempoDelay);             
  digitalWrite(pinoLed, LOW);   
  delay(tempoDelay);             
}
#+END_SRC

- Ex.9 - Tone sequenciador com variável -  https://www.tinkercad.com/things/jIMzNe9eevD 
  - Código é para o computador rodar, mas para o progamador ler!
#+BEGIN_SRC c
void setup()
{
  pinMode(5, OUTPUT);
}

void loop()
{
  tone(5, 100, 90);
  delay(150);
  
  tone(5, 200, 90);
  delay(150);
  
  tone(5, 300, 90);
  delay(150);
  
  tone(5, 400, 90);
  delay(150);
}

// onde estão as redundâncias nesse código
// que podem ser substituídas por variáveis?
#+END_SRC

- Ex.10 - Variando variáveis -  https://www.tinkercad.com/things/iMLDtoDSjwc 
#+BEGIN_SRC c
int pinoLed_R = 5;
int pinoLed_G = 6;
int pinoLed_B = 7;
int tempoDelay = 500;

void setup()
{
  pinMode(pinoLed_R, OUTPUT);
  pinMode(pinoLed_G, OUTPUT);
  pinMode(pinoLed_B, OUTPUT);
}

void loop()
{
  digitalWrite(pinoLed_R, HIGH);
  delay(tempoDelay);
  digitalWrite(pinoLed_G, HIGH);
  delay(tempoDelay * 2);
  digitalWrite(pinoLed_B, HIGH);
  delay(tempoDelay * 0.5); // multiplicar por 0.5 é o mesmo que dividir por 2 
  
  digitalWrite(pinoLed_R, LOW);
  digitalWrite(pinoLed_G, LOW);
  digitalWrite(pinoLed_B, LOW);
  delay(tempoDelay);
  
  tempoDelay = random(500, 2000);
}
#+END_SRC

** TPC
- Resolva o Experimento 2
- Crie algum circuito livre usando ~random()~ e variáveis


* AULA 07 - 14/ABR

** Comunicação serial
- Partindo do Exemplo 10, temos ~tempoDelay = random(500, 2000);~
- Como podemos ver esse valor?
- Ex.11 - Serial - https://www.tinkercad.com/things/0z6Eyd4p9ga 
- Documentação - https://www.arduino.cc/reference/en/language/functions/communication/serial/
#+BEGIN_SRC c
int valorRandomico;

void setup()
{
  Serial.begin(9600);
}

void loop()
{
  valorRandomico = random(100, 500);
  
  //Serial.print("O numero sorteado foi: ");
  Serial.println(valorRandomico);
  
  delay(1000);
}
#+END_SRC

- Atenção para a sintaxe!
- "Dot notation" -> ~Colecao.funcao(argumento)~
- Nem sempre é assim. Outras linguagens vão permitir coisas como ~[1, 2, 3, 4, 5].choose~. Mas não o Arduino.

** ~digitalRead()~
- Documentação: https://www.arduino.cc/reference/en/language/functions/digital-io/digitalread/

- Ex.12 - digitalRead -  https://www.tinkercad.com/things/a7Pzmrh2WYs 
#+BEGIN_SRC c
void setup()
{
  pinMode(5, INPUT);
  Serial.begin(9600);
}

void loop()
{
  Serial.println(digitalRead(5));
  
  delay(1000);
}
#+END_SRC

- /Experimento 3: imprima no monitor serial a leitura de dois pinos, onde um está conectado à 5V, e outro não está conectado à nada. Qual a diferença de leitura?/ 
  - Possível solução:  https://www.tinkercad.com/things/4nBS2eLmEqt 

- Ex.13 - leituraBotao -  https://www.tinkercad.com/things/bMUTLstkbb4 
#+BEGIN_SRC c
int pinoBotao = 2;
int estadoBotao;

void setup()
{
  pinMode(pinoBotao, INPUT);
  Serial.begin(9600);
}

void loop()
{
  estadoBotao = digitalRead(pinoBotao);
  
  Serial.println(estadoBotao);
  delay(100);
}
#+END_SRC

- Pergunta: qual a diferença de circuito entre o botão nesse exemplo, e os usos que vinhamos fazendo até agora?

** ~if()~

- Faz um teste /booleano/ e /condiciona/ a execução de um bloco de código à esse teste.

#+BEGIN_SRC c
if (teste)
{
  //bloco de código que é avaliado se 
  //a condição do teste for verdadeira
}
#+END_SRC

- Ex.14 - ligaLed_botao -  https://www.tinkercad.com/things/5jpQ2PtByJq 
#+BEGIN_SRC c
int pinoBotao = 2;
int pinoLed = 13;
int estadoBotao;

void setup()
{
  pinMode(pinoBotao, INPUT);
  pinMode(pinoLed, OUTPUT);
  Serial.begin(9600);
}

void loop()
{
  estadoBotao = digitalRead(pinoBotao);
  
  if (estadoBotao == 1)
  {
    digitalWrite(pinoLed, HIGH);
  }
//  else
//  {
//  	digitalWrite(pinoLed, LOW);
//  }
  
  Serial.println(estadoBotao);
  delay(50);
}
#+END_SRC

- Lembrando os operadores de comparação:
#+BEGIN_SRC c
x == y (x is equal to y)
x != y (x is not equal to y)
x <  y (x is less than y)
x >  y (x is greater than y)
x <= y (x is less than or equal to y)
x >= y (x is greater than or equal to y)
#+END_SRC
Referência: https://www.arduino.cc/reference/en/language/structure/control-structure/if/

- Ex. 15 - Contador -  https://www.tinkercad.com/things/4kdTHqHBg7d 
#+BEGIN_SRC c
int pinoBotao = 2;
int contador = 0;
int estadoBotao;

void setup()
{
  pinMode(pinoBotao, INPUT);
  Serial.begin(9600);
}

void loop()
{
  estadoBotao = digitalRead(pinoBotao);
  
  if (estadoBotao == HIGH)
  {
    contador = contador + 1;
  }
  
  Serial.println(contador);
  
  delay(100);
}
#+END_SRC

** TPC
- Crie um circuito onde um LED possui um timer de desligamento: ao apertar um botão o LED acende, e após 3 segundos, desliga.
  - Variação possível: crie um semáforo: 3 LEDs (vermelho, amarelo e verde) controlados por um único botão.

- Usando piezos e botões, crie um pequeno piano, onde cada botão produz um som diferente.

- Crie algum circuito livre utilizando condicionais ~if()~ e a leitura de pinos digitais.
  
*** Desafio extra:
- Crie um circuito onde ao apertar um botão um LED acende /e permanece acesso/, e ao apertar de novo, o LED apague.

* AULA 08 - 21/ABR

** ~millis()~
- Documentação: https://www.arduino.cc/reference/en/language/functions/time/millis/

- Função que retorna um valor, em /millisegundos/, que marca a quanto tempo o programa está sendo executado no Arduino.
- Lembrando: 1000 millisegundos == 1 segundo.

- Ex.16 - millis() - https://www.tinkercad.com/things/0acHit8WMhY 
#+BEGIN_SRC c
//int tempo;
unsigned long tempo;
  
void setup()
{
  Serial.begin(9600);
}

void loop()
{
  tempo = millis();
 
  Serial.println(tempo);
  
  delay(100);
}
#+END_SRC

- Variáveis do tipo ~int~ tem um limite máximo de tamanho. A "caixa" só consegue guardar números entre -32.768 e 32.767. (https://www.arduino.cc/reference/en/language/variables/data-types/int/)
- Se usamos uma variável do tipo ~int~ para armazenar valor de ~millis()~, em pouco mais de 30 segundos a variável chega em seu valor máximo, e temos um problema de /stack overflow/: o valor dentro da variável "transborda" depois de 32.767, e pula para o valor mínimo.
  - No Ex.16, experimente trocar o tipo da variável ~tempo~ e observe o monitor serial.

- Como evitar:
  - Usar uma "caixa" que comporta valores maiores. Mudar tipo da variável ~tempo~ para ~long~, capaz de armazenar valores entre -2.147.483.648 e 2.147.483.647 (https://www.arduino.cc/reference/en/language/variables/data-types/long/)

- ~millis()~ é um contador de tempo, começa contagem do zero, portanto nunca tem valores negativos. Usa-se então um /qualificador/ ao início da declaração da variável para especificar que aquela variável agora só comporta valores positivos. ~unsigned~ = "sem sinal". (https://www.arduino.cc/reference/en/language/variables/data-types/unsignedlong/)
  - Observe: agora a variável ~unsigned long tempo~ pode comportar valores entre 0 e 4.294.967.295. Seu tamanho é o mesmo de antes, o /âmbito/ é que foi transposto para o universo dos números positivos.

\\
- Ex.17 - blink_if - https://www.tinkercad.com/things/07l1cmCVVjO
#+BEGIN_SRC c
int pinoLed = 13;
int estadoLed = HIGH;

void setup()
{
  Serial.begin(9600);
  pinMode(pinoLed, OUTPUT);
}

void loop()
{
  Serial.print("estadoLed antes do if: ");
  Serial.println(estadoLed);
  
  digitalWrite(pinoLed, estadoLed);
  	
   if (estadoLed == HIGH)
   {
     estadoLed = LOW;
   }
   else
   {
     estadoLed = HIGH;
   }
  
   Serial.print("estadoLed depois do if: ");
   Serial.println(estadoLed);
  	
   delay(2000);
}
#+END_SRC

- Piscagem de um LED (como Ex.1 - Blink), mas sem valores /hardcoded/ ~HIGH~ e ~LOW~ em duas chamadas para a função ~digitalWrite()~.
- Agora cria-se lógica onde através da variável ~estadoLed~ monitora-se o estado /booleano/ do Led ("está acesso ou apagado?").
- Desafio: depois de ler a documentação do /operador lógico NOT/ (https://www.arduino.cc/reference/en/language/structure/boolean-operators/logicalnot/), você é capaz de reescrever o Ex.17 /sem usar nenhum ~if()~/?

\\
- Ex.18 - blinkSemDelay -  https://www.tinkercad.com/things/3RZ8sFVXgCy
#+BEGIN_SRC c
int pinoLed = 13;
int intervalo = 1000;
int tempoAnterior = 0;
int estadoLed = HIGH;
int tempoAtual;

void setup()
{
  Serial.begin(9600);
  pinMode(13, OUTPUT);
}

void loop()
{
  tempoAtual = millis();
  
  if (tempoAtual - tempoAnterior > intervalo)
  {
    digitalWrite(pinoLed, estadoLed);
    
    if (estadoLed == HIGH)
    {
   	estadoLed = LOW;
    }
    else
    {
  	estadoLed = HIGH;
    }

    Serial.print("entrou no if. estadoLed = ");
    Serial.println(estadoLed);
    
    tempoAnterior = tempoAtual;
  }
}
#+END_SRC

- Perguntas:
  - Qual a ordem de execução das expressões na linha ~if (tempoAtual - tempoAnterior > intervalo)~?
  - A que a linha ~tempoAnterior = tempoAtual~ faz?
